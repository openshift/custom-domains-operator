#!/usr/bin/env bash

set -e

source $CONVENTION_ROOT/_lib/common.sh

# No PRE
[[ "$1" == "PRE" ]] && exit 0

# Expect POST
[[ "$1" == "POST" ]] || err "Got a parameter I don't understand: '$1'. Did the infrastructure change?"

OPERATOR_NAME=$(sed -n 's/.*OperatorName .*"\([^"]*\)".*/\1/p' "${REPO_ROOT}/config/config.go")
REPO_ROOT=$(git rev-parse --show-toplevel)
E2E_SUITE_DIRECTORY=$REPO_ROOT/test/e2e

# Update operator name in templates
OPERATOR_UNDERSCORE_NAME=${OPERATOR_NAME//-/_}
OPERATOR_PROPER_NAME=$(echo "$OPERATOR_NAME" | sed 's/-/ /g' | awk '{for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }}1')
OPERATOR_NAME_CAMEL_CASE=${OPERATOR_PROPER_NAME// /}

mkdir -p "${E2E_SUITE_DIRECTORY}"

E2E_SUITE_BUILDER_IMAGE=registry.ci.openshift.org/openshift/release:rhel-8-release-golang-1.23-openshift-4.19
if [[ -n ${KONFLUX_BUILDS} ]]; then
	E2E_SUITE_BUILDER_IMAGE="brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_8_1.23"
fi

echo "syncing ${E2E_SUITE_DIRECTORY}/Dockerfile"
tee "${E2E_SUITE_DIRECTORY}/Dockerfile" <<EOF
# THIS FILE IS GENERATED BY BOILERPLATE. DO NOT EDIT.
FROM ${E2E_SUITE_BUILDER_IMAGE} as builder
WORKDIR /go/src/github.com/openshift/$OPERATOR_NAME/
COPY . .
RUN  CGO_ENABLED=0 GOFLAGS="-mod=mod" go test ./test/e2e -v -c --tags=osde2e -o /e2e.test

FROM registry.access.redhat.com/ubi8/ubi-minimal:latest
COPY --from=builder ./e2e.test e2e.test
ENTRYPOINT [ "/e2e.test" ]
EOF

if [ ! -f "${E2E_SUITE_DIRECTORY}/${OPERATOR_UNDERSCORE_NAME}_tests.go" ]; then
	echo "syncing ${E2E_SUITE_DIRECTORY}/${OPERATOR_UNDERSCORE_NAME}_tests.go"
	tee "${E2E_SUITE_DIRECTORY}/${OPERATOR_UNDERSCORE_NAME}_tests.go" <<EOF
// DO NOT REMOVE TAGS BELOW. IF ANY NEW TEST FILES ARE CREATED UNDER /test/e2e, PLEASE ADD THESE TAGS TO THEM IN ORDER TO BE EXCLUDED FROM UNIT TESTS.
//go:build osde2e

package osde2etests

import "github.com/onsi/ginkgo/v2"

var _ = ginkgo.Describe("$OPERATOR_NAME", func() {
	//	 Add your tests
})
EOF
fi

echo "syncing ${E2E_SUITE_DIRECTORY}/${OPERATOR_UNDERSCORE_NAME}_runner_test.go"
tee "${E2E_SUITE_DIRECTORY}/${OPERATOR_UNDERSCORE_NAME}_runner_test.go" <<EOF
// THIS FILE IS GENERATED BY BOILERPLATE. DO NOT EDIT.
//go:build osde2e

package osde2etests

import (
	"os"
	"path/filepath"
	"testing"

	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

const (
	testResultsDirectory = "/test-run-results"
	jUnitOutputFilename  = "junit-${OPERATOR_NAME}.xml"
)

// Test entrypoint. osde2e runs this as a test suite on test pod.
func Test${OPERATOR_NAME_CAMEL_CASE}(t *testing.T) {
	RegisterFailHandler(Fail)
	suiteConfig, reporterConfig := GinkgoConfiguration()
	if _, ok := os.LookupEnv("DISABLE_JUNIT_REPORT"); !ok {
		reporterConfig.JUnitReport = filepath.Join(testResultsDirectory, jUnitOutputFilename)
	}
	RunSpecs(t, "${OPERATOR_PROPER_NAME}", suiteConfig, reporterConfig)
}
EOF

sed -e "s/\${OPERATOR_NAME}/${OPERATOR_NAME}/" $(dirname $0)/test-harness-template.yml >"${E2E_SUITE_DIRECTORY}/test-harness-template.yml"
